---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS Resources for GivesourceÂ®
Parameters:

  AdminEmail:
    Description: Your admin email address. The initial login information will be sent to the address.
    Type: String
    AllowedPattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

  AdminPagesCNAMEs:
    Description: Alternate domain names for Admin Pages CloudFront Distribution
    Type: CommaDelimitedList
    Default: ""

  AdminPagesSSLCertificateArn:
    Description: Admin Pages CloudFront SSL Certificate ARN
    Type: String
    Default: ""

  PublicPagesCNAMEs:
    Description: Alternate domain names for Public Pages CloudFront Distribution
    Type: CommaDelimitedList
    Default: ""

  PublicPagesSSLCertificateArn:
    Description: Public Pages CloudFront SSL Certificate ARN
    Type: String
    Default: ""

Mappings:
  ApiGateway:
    IntegrationRequestTemplate:
      Default: |
        #if($context.authorizer.user && "$context.authorizer.user" != "")
          #set($user = "$context.authorizer.user")
        #else
          #set($user = 'null')
        #end
        {
          "body": $input.json('$'),
          "headers":{
            #foreach($param in $input.params().header.keySet())
            #set($p = $util.escapeJavaScript($input.params().header.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "method": "$context.httpMethod",
          "params": {
            #foreach($param in $input.params().path.keySet())
            #set($p = $util.escapeJavaScript($input.params().path.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "query": {
            #foreach($param in $input.params().querystring.keySet())
            #set($p = $util.escapeJavaScript($input.params().querystring.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "user": $user
        }
    IntegrationResponsesTemplate:
      Default: |
        #set ($errorObj = $util.parseJson($input.path('$.errorMessage')))
        {
          "errors" : {
            "type" : "$errorObj.type",
            "message" : "$errorObj.message",
            "request_id" : "$errorObj.requestId"
          }
        }
    SuccessResponseTemplate:
      Default: |
        {
          "statusCode": 200
        }
  Lambda:
    Timeout:
      Default: 30

Resources:

  DynamoDbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-dynamo.yml
      TimeoutInMinutes: 40

  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdminPagesCNAMEs: !Join [",", !Ref AdminPagesCNAMEs]
        AdminPagesSSLCertificateArn: !Ref AdminPagesSSLCertificateArn
        PublicPagesCNAMEs: !Join [",", !Ref PublicPagesCNAMEs]
        PublicPagesSSLCertificateArn: !Ref PublicPagesSSLCertificateArn
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-s3.yml
      TimeoutInMinutes: 40

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub |-
        ${AWS::StackName}

  ApiGatewayManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: apigateway:*
            Resource:
              - !Sub arn:aws:apigateway:${AWS::Region}::/apikeys
              - !Sub arn:aws:apigateway:${AWS::Region}::/apikeys/*
              - !Sub arn:aws:apigateway:${AWS::Region}::/restapis/*/stages
              - !Sub arn:aws:apigateway:${AWS::Region}::/restapis/*/stages/*
    DependsOn: RestApi

  CloudFormationManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudformation:DescribeStacks
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*

  CloudWatchLogsManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  CognitoManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cognito-idp:*
              - iam:PassRole
            Resource: '*'

  DynamoDbManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: dynamodb:*
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ContentsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ContentsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonationsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonationsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonorsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonorsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.FilesTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.FilesTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MessagesTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MessagesTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MetricsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MetricsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitDonationTiersTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitDonationTiersTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitSlidesTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitSlidesTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.PaymentTransactionsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.PaymentTransactionsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ReportsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ReportsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SettingsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SettingsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SponsorsTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SponsorsTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SponsorTiersTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SponsorTiersTable}/index/*
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.UsersTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.UsersTable}/index/*
    DependsOn: DynamoDbStack

  LambdaManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*

  S3ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}
              - arn:aws:s3:::{{awsReleaseBucket}}
          - Effect: Allow
            Action: s3:Get*
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}/*
              - arn:aws:s3:::{{awsReleaseBucket}}/*
          - Effect: Allow
            Action:
              - s3:Delete*
              - s3:Put*
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}/*

  SESManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ses:*
            Resource: '*'

  SNSManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sns:publish
            Resource: '*'

  CognitoSnsCallerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - cognito-idp.amazonaws.com
      ManagedPolicyArns:
        - !Ref SNSManagedPolicy

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !Ref ApiGatewayManagedPolicy
        - !Ref CloudFormationManagedPolicy
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref CognitoManagedPolicy
        - !Ref DynamoDbManagedPolicy
        - !Ref LambdaManagedPolicy
        - !Ref S3ManagedPolicy
        - !Ref SESManagedPolicy

  CustomStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        RestApi: !Ref RestApi
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        CognitoSnsCallerRoleArn: !GetAtt CognitoSnsCallerRole.Arn
        AdminPagesS3: !GetAtt S3Stack.Outputs.AdminPagesS3
        AdminPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDistribution
        AdminPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl
        PublicPagesS3: !GetAtt S3Stack.Outputs.PublicPagesS3
        PublicPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDistribution
        PublicPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl
        UploadsS3: !GetAtt S3Stack.Outputs.UploadsS3
        UploadsCloudFrontDistribution: !GetAtt S3Stack.Outputs.UploadsCloudFrontDistribution
        UploadsCloudFrontUrl: !GetAtt S3Stack.Outputs.UploadsCloudFrontUrl
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-custom.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CognitoSnsCallerRole
      - DynamoDbStack
      - LambdaRole
      - S3Stack

  SSMManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:PutParameter
            Resource: '*'

  SecureSettingsEncryptManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: kms:Encrypt
            Resource: !GetAtt CustomStack.Outputs.SecureSettingsKeyArn
    DependsOn: CustomStack

  SecureSettingsDecryptManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: kms:Decrypt
            Resource: !GetAtt CustomStack.Outputs.SecureSettingsKeyArn
    DependsOn: CustomStack

  SecureSettingsLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref SSMManagedPolicy
        - !Ref SecureSettingsEncryptManagedPolicy
    DependsOn: SecureSettingsEncryptManagedPolicy

  SecureLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !Ref ApiGatewayManagedPolicy
        - !Ref CloudFormationManagedPolicy
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref CognitoManagedPolicy
        - !Ref DynamoDbManagedPolicy
        - !Ref SSMManagedPolicy
        - !Ref LambdaManagedPolicy
        - !Ref S3ManagedPolicy
        - !Ref SESManagedPolicy
        - !Ref SecureSettingsDecryptManagedPolicy

  ApiContentsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-contents.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiDonationsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        SecureLambdaRoleArn: !GetAtt SecureLambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donations.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiDonorsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donors.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiFilesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-files.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi
      - S3Stack

  ApiMessagesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-messages.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiMetricsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-metrics.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiNonprofitsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-nonprofits.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiPaymentTransactionsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-payment-transactions.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiReportsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-reports.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiSettingsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        CognitoCustomMessageFunctionArn: !GetAtt CustomStack.Outputs.CognitoCustomMessageFunctionArn
        CognitoSnsCallerRoleArn: !GetAtt CognitoSnsCallerRole.Arn
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        SecureSettingsKeyAlias: !GetAtt CustomStack.Outputs.SecureSettingsKeyAlias
        SecureSettingsLambdaFunctionRoleArn: !GetAtt SecureSettingsLambdaFunctionRole.Arn
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-settings.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiSponsorsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-sponsors.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiUsersStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-users.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CustomStack
      - LambdaRole
      - RestApi

  ApiDeployStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        RestApi: !Ref RestApi
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-deploy.yml
      TimeoutInMinutes: 20
    DependsOn:
      - ApiContentsStack
      - ApiDonationsStack
      - ApiDonorsStack
      - ApiFilesStack
      - ApiMessagesStack
      - ApiMetricsStack
      - ApiNonprofitsStack
      - ApiPaymentTransactionsStack
      - ApiReportsStack
      - ApiSettingsStack
      - ApiSponsorsStack
      - ApiUsersStack
      - RestApi

  CognitoInitialUser:
    Type: Custom::CognitoSuperAdminUser
    Properties:
      ServiceToken: !GetAtt CustomStack.Outputs.CognitoCreateUserFunctionArn
      UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
      Email: !Ref AdminEmail
    DependsOn:
      - ApiDeployStack
      - CustomStack
      - DynamoDbStack
      - S3Stack

Outputs:

  AdminPagesCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDistribution

  AdminPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl

  AdminPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3

  AdminPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3BucketUrl

  ApiUrl:
    Value: !Sub |-
      https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/

  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn

  PublicPagesCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDistribution

  PublicPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl

  PublicPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3

  PublicPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3BucketUrl

  UploadsCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.UploadsCloudFrontDistribution

  UploadsCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.UploadsCloudFrontUrl

  UploadsS3BucketName:
    Value: !GetAtt S3Stack.Outputs.UploadsS3

  UploadsS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.UploadsS3BucketUrl

  UserPoolClientId:
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolClientId

  UserPoolId:
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolId

  Version:
    Value: {{version}}