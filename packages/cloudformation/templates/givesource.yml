---
AWSTemplateFormatVersion: 2010-09-09
Description: Givesource
Parameters:

  AdminEmail:
    Description: Your admin email address. The initial login information will be sent to the address.
    Type: String
    AllowedPattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

  DefaultLambdaFunctionTimeout:
    Description: The default timeout for Lambda functions, in seconds.
    Type: Number
    MinValue: 10
    MaxValue: 300
    Default: 30

Resources:

  DynamoDbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-dynamo.yml
      TimeoutInMinutes: 20

  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-s3.yml
      TimeoutInMinutes: 20

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub |-
        ${AWS::StackName}

  HealthCheck:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub |-
        ${AWS::StackName}-Health

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
      - PolicyName: Lambda
        PolicyDocument:
          Statement:
            - Action:
              - lambda:InvokeFunction
              Effect: Allow
              Resource: !Sub |-
                arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
      - PolicyName: CloudWatchLogs
        PolicyDocument:
          Statement:
            - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Effect: Allow
              Resource: arn:aws:logs:*:*:*
      - PolicyName: DynamoDB
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonationsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonationsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonationsTable}/stream/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonorsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonorsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.DonorsTable}/stream/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.FilesTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.FilesTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitsTable}/stream/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitDonationTiersTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitDonationTiersTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitSlidesTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.NonprofitSlidesTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MessagesTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.MessagesTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.PaymentTransactionsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.PaymentTransactionsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ReportsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.ReportsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SettingsTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.SettingsTable}/index/*
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.UsersTable}
            - Effect: Allow
              Action: dynamodb:*
              Resource: !Sub |-
                arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbStack.Outputs.UsersTable}/index/*
      - PolicyName: CloudFormation
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: cloudformation:DescribeStacks
              Resource: !Sub |-
                arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*
      - PolicyName: S3
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !Sub |-
                  arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}
                - !Sub |-
                  arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}
                - arn:aws:s3:::{{awsReleaseBucket}}
            - Effect: Allow
              Action:
                - s3:Delete*
                - s3:Put*
                - s3:Get*
              Resource:
                - !Sub |-
                  arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}/*
                - !Sub |-
                  arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}/*
                - arn:aws:s3:::{{awsReleaseBucket}}/*
      - PolicyName: Cognito
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:*
                - iam:PassRole
              Resource: '*'
      - PolicyName: CloudSearch
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: cloudsearch:*
              Resource: !Sub |-
                arn:aws:cloudsearch:${AWS::Region}:${AWS::AccountId}:domain/*
      - PolicyName: APIGateway
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - apigateway:POST
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/restapis/${RestApi}/deployments
            - Effect: Allow
              Action:
                - apigateway:*
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/apikeys
            - Effect: Allow
              Action:
                - apigateway:*
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/apikeys/*
      - PolicyName: HealthCheck
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - apigateway:POST
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/restapis/${HealthCheck}/deployments
            - Effect: Allow
              Action:
                - apigateway:*
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/apikeys
            - Effect: Allow
              Action:
                - apigateway:*
              Resource: !Sub |-
                arn:aws:apigateway:${AWS::Region}::/apikeys/*
    DependsOn:
      - DynamoDbStack
      - HealthCheck
      - RestApi
      - S3Stack

  S3HandleFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
      - PolicyName: WriteS3
        PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetObject
                Resource: arn:aws:s3:::*
      - PolicyName: WriteCloudWatchLogs
        PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  CognitoSnsCallerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cognito-idp.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
      - PolicyName: SNSPublish
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - sns:publish
              Resource: '*'

  HealthCheckStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        HealthCheck: !Ref HealthCheck
        HealthCheckRootResourceId: !GetAtt HealthCheck.RootResourceId
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-health.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole

  CloudSearchStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        HealthCheckUrl: !Sub |-
          https://${HealthCheck}.execute-api.${AWS::Region}.amazonaws.com/health/
        DonationsTableStreamArn: !GetAtt DynamoDbStack.Outputs.DonationsTableStreamArn
        DonorsTableStreamArn: !GetAtt DynamoDbStack.Outputs.DonorsTableStreamArn
        NonprofitsTableStreamArn: !GetAtt DynamoDbStack.Outputs.NonprofitsTableStreamArn
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-cloudsearch.yml
      TimeoutInMinutes: 40
    DependsOn:
      - DynamoDbStack
      - HealthCheckStack
      - LambdaRole

  CustomStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        RestApi: !Ref RestApi
        HealthCheck: !Ref HealthCheck
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        CognitoSnsCallerRoleArn: !GetAtt CognitoSnsCallerRole.Arn
        S3HandleFunctionRoleArn: !GetAtt S3HandleFunctionRole.Arn
        AdminPagesS3: !GetAtt S3Stack.Outputs.AdminPagesS3
        AdminPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl
        PublicPagesS3: !GetAtt S3Stack.Outputs.PublicPagesS3
        PublicPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-custom.yml
      TimeoutInMinutes: 20
    DependsOn:
      - CognitoSnsCallerRole
      - DynamoDbStack
      - LambdaRole
      - S3HandleFunctionRole
      - S3Stack

  ApiDonationsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donations.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiDonorsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donors.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiFilesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-files.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiMessagesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-messages.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiNonprofitsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-nonprofits.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiPaymentTransactionsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-payment-transactions.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiReportsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-reports.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiSettingsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-settings.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiUsersStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-users.yml
      TimeoutInMinutes: 20
    DependsOn:
      - LambdaRole
      - RestApi

  ApiDeployStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        DefaultLambdaFunctionTimeout: !Ref DefaultLambdaFunctionTimeout
        RestApi: !Ref RestApi
      TemplateURL: https://s3-{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-deploy.yml
      TimeoutInMinutes: 20
    DependsOn:
      - ApiDonationsStack
      - ApiDonorsStack
      - ApiFilesStack
      - ApiMessagesStack
      - ApiNonprofitsStack
      - ApiPaymentTransactionsStack
      - ApiReportsStack
      - ApiSettingsStack
      - ApiUsersStack
      - RestApi

  CognitoInitialUser:
    Type: Custom::CognitoSuperAdminUser
    Properties:
      ServiceToken: !GetAtt CustomStack.Outputs.CognitoCreateUserFunctionArn
      UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
      Email: !Ref AdminEmail
    DependsOn:
      - ApiDeployStack
      - CustomStack
      - CloudSearchStack
      - DynamoDbStack
      - HealthCheckStack
      - S3Stack

Outputs:

  AdminPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl

  AdminPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3

  AdminPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3BucketUrl

  ApiUrl:
    Value: !Sub |-
      https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/

  CloudSearchDonationsDocServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchDonationsDocServiceEndpoint

  CloudSearchDonationsSearchServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchDonationsSearchServiceEndpoint

  CloudSearchDonorssDocServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchDonorssDocServiceEndpoint

  CloudSearchDonorsSearchServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchDonorsSearchServiceEndpoint

  CloudSearchNonprofitsDocServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchNonprofitsDocServiceEndpoint

  CloudSearchNonprofitsSearchServiceEndpoint:
    Value: !GetAtt CloudSearchStack.Outputs.CloudSearchNonprofitsSearchServiceEndpoint

  HealthCheckUrl:
    Value: !Sub |-
      https://${HealthCheck}.execute-api.${AWS::Region}.amazonaws.com/health/

  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn

  PublicPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl

  PublicPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3

  PublicPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3BucketUrl

  UserPoolClientId:
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolClientId

  UserPoolId:
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolId

  Version:
    Value: {{version}}