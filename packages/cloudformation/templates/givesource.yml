
AWSTemplateFormatVersion: 2010-09-09
Description: AWS Resources for Givesource(R)
Parameters:

  AdminEmail:
    Description: Your admin email address. The initial login information will be sent to the address.
    Type: String
    AllowedPattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

  AdminPagesCNAMEs:
    Description: Alternate domain names for Admin Pages CloudFront Distribution
    Type: CommaDelimitedList
    Default: ""

  AdminPagesSSLCertificateArn:
    Description: Admin Pages CloudFront SSL Certificate ARN
    Type: String
    Default: ""

  PublicPagesCNAMEs:
    Description: Alternate domain names for Public Pages CloudFront Distribution
    Type: CommaDelimitedList
    Default: ""

  PublicPagesSSLCertificateArn:
    Description: Public Pages CloudFront SSL Certificate ARN
    Type: String
    Default: ""

  EnableMonitoring:
    Description: Conditionally the creation/deletion of the monitoring stack
    Type: String
    Default: "false"

  ReplicaRegion:
    Description: The region where this stack will be replicated
    Type: String
    Default: ""

Mappings:
  ApiGateway:
    IntegrationRequestTemplate:
      Default: |
        #if($context.authorizer.user && "$context.authorizer.user" != "")
          #set($user = "$context.authorizer.user")
        #else
          #set($user = 'null')
        #end
        {
          "body": $input.json('$'),
          "headers":{
            #foreach($param in $input.params().header.keySet())
            #set($p = $util.escapeJavaScript($input.params().header.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "method": "$context.httpMethod",
          "params": {
            #foreach($param in $input.params().path.keySet())
            #set($p = $util.escapeJavaScript($input.params().path.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "query": {
            #foreach($param in $input.params().querystring.keySet())
            #set($p = $util.escapeJavaScript($input.params().querystring.get($param)).replaceAll("\\'", "'"))
            "$param": "$p"
            #if($foreach.hasNext),#end
            #end
          },
          "user": $user
        }
    IntegrationResponsesTemplate:
      Default: |
        #set ($errorObj = $util.parseJson($input.path('$.errorMessage')))
        {
          "errors" : {
            "type" : "$errorObj.type",
            "message" : "$errorObj.message",
            "request_id" : "$errorObj.requestId"
          }
        }
    SuccessResponseTemplate:
      Default: |
        {
          "statusCode": 200
        }
  Lambda:
    Timeout:
      Default: 30

Conditions:

  EnableMonitoring: !Equals ["true", !Ref EnableMonitoring]

  IsReplicaRegion: !Equals [!Ref "AWS::Region", !Ref ReplicaRegion]

  NotReplicaRegion: !Not [!Equals [!Ref "AWS::Region", !Ref ReplicaRegion]]

Resources:
  AuroraDbStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        LambdaRole: !Ref LambdaRole
        SecureLambdaRole: !Ref SecureLambdaRole
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-aurora.yml
      TimeoutInMinutes: 60

  AuroraDbSnapshotCopyStack:
    Condition: IsReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-aurora-snapshot-copy.yml

  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdminPagesCNAMEs: !Join [",", !Ref AdminPagesCNAMEs]
        AdminPagesSSLCertificateArn: !Ref AdminPagesSSLCertificateArn
        PublicPagesCNAMEs: !Join [",", !Ref PublicPagesCNAMEs]
        PublicPagesSSLCertificateArn: !Ref PublicPagesSSLCertificateArn
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-s3.yml
      TimeoutInMinutes: 60

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub |-
        ${AWS::StackName}

  ApiDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: !Ref RestApi
          DomainName: !Sub ${RestApi}.execute-api.${AWS::Region}.amazonaws.com
          OriginPath: "/prod"
          CustomOriginConfig:
            OriginSSLProtocols: ["TLSv1.2"]
            OriginProtocolPolicy: "https-only"
        Enabled: true
        Comment: Distribution for Givesource(R) api caching
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods: ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          CachePolicyId: !ImportValue global-no-cache-policy
          TargetOriginId: !Ref RestApi
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_200
        CacheBehaviors:
        - PathPattern: "/settings"
          AllowedMethods: ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          CachePolicyId: !ImportValue global-cache-policy
          TargetOriginId: !Ref RestApi
          ViewerProtocolPolicy: redirect-to-https
        - PathPattern: "/contents"
          AllowedMethods: ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          CachePolicyId: !ImportValue global-cache-policy
          TargetOriginId: !Ref RestApi
          ViewerProtocolPolicy: redirect-to-https
        - PathPattern: "/files"
          AllowedMethods: ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          CachePolicyId: !ImportValue global-cache-policy
          TargetOriginId: !Ref RestApi
          ViewerProtocolPolicy: redirect-to-https

  ApiGatewayManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: apigateway:*
            Resource:
              - !Sub arn:aws:apigateway:${AWS::Region}::/apikeys
              - !Sub arn:aws:apigateway:${AWS::Region}::/apikeys/*
              - !Sub arn:aws:apigateway:${AWS::Region}::/restapis/*/stages
              - !Sub arn:aws:apigateway:${AWS::Region}::/restapis/*/stages/*
    DependsOn: RestApi

  CloudFormationManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudformation:DescribeStacks
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*

  CloudFrontManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: cloudfront:CreateInvalidation
          Resource: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${ApiDistribution}

  CloudWatchLogsManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  CognitoManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cognito-idp:*
              - iam:PassRole
            Resource: '*'

  LambdaManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*

  S3ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.GivesourceCache}
              - !Sub arn:aws:s3:::${S3Stack.Outputs.Reports}
              - arn:aws:s3:::{{awsReleaseBucket}}
          - Effect: Allow
            Action: s3:Get*
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.GivesourceCache}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.Reports}/*
              - arn:aws:s3:::{{awsReleaseBucket}}/*
          - Effect: Allow
            Action:
              - s3:Delete*
              - s3:Put*
            Resource:
              - !Sub arn:aws:s3:::${S3Stack.Outputs.AdminPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.PublicPagesS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.UploadsS3}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.GivesourceCache}/*
              - !Sub arn:aws:s3:::${S3Stack.Outputs.Reports}/*

  SESManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ses:*
            Resource: '*'

  SNSManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sns:publish
            Resource: '*'

  CognitoSnsCallerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - cognito-idp.amazonaws.com
      ManagedPolicyArns:
        - !Ref SNSManagedPolicy

  SSMManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:DeleteParameter
              - ssm:GetParameter
              - ssm:PutParameter
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}*

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref ApiGatewayManagedPolicy
        - !Ref CloudFormationManagedPolicy
        - !Ref CloudFrontManagedPolicy
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref CognitoManagedPolicy
        - !Ref LambdaManagedPolicy
        - !Ref S3ManagedPolicy
        - !Ref SESManagedPolicy
        - !Ref SSMManagedPolicy

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress/egress rules for lambda
      VpcId: !ImportValue givesource-vpc
      SecurityGroupIngress: []
      SecurityGroupEgress: []
      Tags:
        - Key: Name
          Value: givesource-lambda

  CustomStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        ApiDistributionId: !Ref ApiDistribution
        ApiDistributionUrl: !Join ["", ["https://", !GetAtt ApiDistribution.DomainName, "/"]]
        RestApi: !Ref RestApi
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        SecureLambdaRole: !Ref SecureLambdaRole
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        CognitoSnsCallerRoleArn: !GetAtt CognitoSnsCallerRole.Arn
        AdminPagesS3: !GetAtt S3Stack.Outputs.AdminPagesS3
        AdminPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDistribution
        AdminPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl
        PublicPagesS3: !GetAtt S3Stack.Outputs.PublicPagesS3
        PublicPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDistribution
        PublicPagesCloudFrontUrl: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl
        UploadsS3: !GetAtt S3Stack.Outputs.UploadsS3
        UploadsCloudFrontDistribution: !GetAtt S3Stack.Outputs.UploadsCloudFrontDistribution
        UploadsCloudFrontUrl: !GetAtt S3Stack.Outputs.UploadsCloudFrontUrl
        GivesourceCache: !GetAtt S3Stack.Outputs.GivesourceCache
        CachingCloudFrontUrl: !GetAtt S3Stack.Outputs.CachingCloudFrontUrl
        ReportsS3: !GetAtt S3Stack.Outputs.Reports
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-custom.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  SecureSettingsLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
      - PolicyName: secure_settings_encrypt
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: kms:Encrypt
              Resource:
                - !ImportValue global-encryption-key-arn
      - PolicyName: dead_letter_queue_publish
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource:
                - !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref SSMManagedPolicy

  SecureLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
      - PolicyName: secure_settings_decrypt
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: kms:Decrypt
              Resource:
                - !ImportValue global-recaptcha-key
                - !ImportValue global-encryption-key-arn
      - PolicyName: dead_letter_queue_publish
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource:
                - !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref ApiGatewayManagedPolicy
        - !Ref CloudFormationManagedPolicy
        - !Ref CloudWatchLogsManagedPolicy
        - !Ref CognitoManagedPolicy
        - !Ref SSMManagedPolicy
        - !Ref LambdaManagedPolicy
        - !Ref S3ManagedPolicy
        - !Ref SESManagedPolicy

  ApiContentsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-contents.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiDonationsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        SecureLambdaRoleArn: !GetAtt SecureLambdaRole.Arn
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donations.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack
      - CustomStack

  ApiDonorsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-donors.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiFilesStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
        ReportsBucket: !GetAtt S3Stack.Outputs.Reports
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-files.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiMessagesStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-messages.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiAgreementsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-agreements.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiMetricsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-metrics.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiNonprofitsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-nonprofits.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiPaymentTransactionsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-payment-transactions.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiReportsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        UploadsBucket: !GetAtt S3Stack.Outputs.UploadsS3
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-reports.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiSettingsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        CognitoCustomMessageFunctionArn: !GetAtt CustomStack.Outputs.CognitoCustomMessageFunctionArn
        CognitoSnsCallerRoleArn: !GetAtt CognitoSnsCallerRole.Arn
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        SecureSettingsLambdaFunctionRoleArn: !GetAtt SecureSettingsLambdaFunctionRole.Arn
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-settings.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack
      - CustomStack

  ApiSponsorsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-sponsors.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiUsersStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        IntegrationRequestTemplate: !FindInMap [ApiGateway, IntegrationRequestTemplate, Default]
        IntegrationResponsesTemplate: !FindInMap [ApiGateway, IntegrationResponsesTemplate, Default]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-users.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiRecaptchaStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [ Lambda, Timeout, Default ]
        IntegrationRequestTemplate: !FindInMap [ ApiGateway, IntegrationRequestTemplate, Default ]
        IntegrationResponsesTemplate: !FindInMap [ ApiGateway, IntegrationResponsesTemplate, Default ]
        SuccessResponseTemplate: !FindInMap [ApiGateway, SuccessResponseTemplate, Default]
        RestApi: !Ref RestApi
        RestApiRootResourceId: !GetAtt RestApi.RootResourceId
        AuthorizeUsers: !GetAtt CustomStack.Outputs.AuthorizeUsers
        SecureSettingsLambdaFunctionRoleArn: !GetAtt SecureSettingsLambdaFunctionRole.Arn
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-recaptcha.yml
      TimeoutInMinutes: 30
    DependsOn:
      - AuroraDbStack

  ApiDeployStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        RestApi: !Ref RestApi
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-api-deploy.yml
      TimeoutInMinutes: 30
    DependsOn:
      - ApiContentsStack
      - ApiDonationsStack
      - ApiDonorsStack
      - ApiFilesStack
      - ApiMessagesStack
      - ApiAgreementsStack
      - ApiMetricsStack
      - ApiNonprofitsStack
      - ApiPaymentTransactionsStack
      - ApiReportsStack
      - ApiSettingsStack
      - ApiSponsorsStack
      - ApiUsersStack
      - ApiRecaptchaStack
      - RestApi

  CognitoInitialUser:
    Condition: NotReplicaRegion
    Type: Custom::CognitoSuperAdminUser
    Properties:
      ServiceToken: !GetAtt CustomStack.Outputs.CognitoCreateUserFunctionArn
      UserPoolId: !GetAtt CustomStack.Outputs.CognitoUserPoolId
      Email: !Ref AdminEmail
    DependsOn:
      - ApiDeployStack
      - CustomStack
      - AuroraDbStack
      - S3Stack

  MonitoringStack:
    Condition: EnableMonitoring
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        AdminEmail: !Ref AdminEmail
        AdminPagesCloudFrontDomainName: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDomainName
        AdminPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDistribution
        AdminPagesCNAMEs: !Join [",", !Ref AdminPagesCNAMEs]
        PublicPagesCloudFrontDomainName: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDomainName
        PublicPagesCloudFrontDistribution: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDistribution
        PublicPagesCNAMEs: !Join [",", !Ref PublicPagesCNAMEs]
        DatabaseIdentifier: !GetAtt AuroraDbStack.Outputs.Identifier
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-monitoring.yml
      TimeoutInMinutes: 30
    DependsOn:
      - CognitoInitialUser

  CacheStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
        LambdaRoleArn: !GetAtt LambdaRole.Arn
        LambdaSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId
        DefaultLambdaFunctionTimeout: !FindInMap [Lambda, Timeout, Default]
        CacheS3: !GetAtt S3Stack.Outputs.GivesourceCache
        DeadLetterQueueTopic: !GetAtt SqsStack.Outputs.DeadLetterQueueTopic
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-cache.yml
      TimeoutInMinutes: 60
    DependsOn:
      - AuroraDbStack

  SqsStack:
    Condition: NotReplicaRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref AWS::StackName
      TemplateURL: https://s3.{{awsReleaseBucketRegion}}.amazonaws.com/{{awsReleaseBucket}}/cf-templates/{{version}}/givesource-sqs.yml
      TimeoutInMinutes: 60

Outputs:

  AdminPagesCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontDistribution

  AdminPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesCloudFrontUrl

  AdminPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3

  AdminPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.AdminPagesS3BucketUrl

  ApiUrl:
    Value: !Sub |-
      https://${ApiDistribution.DomainName}/

  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn

  PublicPagesCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontDistribution

  PublicPagesCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesCloudFrontUrl

  PublicPagesS3BucketName:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3

  PublicPagesS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.PublicPagesS3BucketUrl

  UploadsCloudFrontDistribution:
    Value: !GetAtt S3Stack.Outputs.UploadsCloudFrontDistribution

  UploadsCloudFrontUrl:
    Value: !GetAtt S3Stack.Outputs.UploadsCloudFrontUrl

  UploadsS3BucketName:
    Value: !GetAtt S3Stack.Outputs.UploadsS3

  UploadsS3BucketUrl:
    Value: !GetAtt S3Stack.Outputs.UploadsS3BucketUrl

  UserPoolClientId:
    Condition: NotReplicaRegion
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolClientId

  UserPoolId:
    Condition: NotReplicaRegion
    Value: !GetAtt CustomStack.Outputs.CognitoUserPoolId

  Version:
    Value: {{version}}
