---
AWSTemplateFormatVersion: 2010-09-09
Description: Donations API resources for Givesource
Parameters:

  StackName:
    Type: String

  LambdaRoleArn:
    Type: String

  RestApi:
    Type: String

  RestApiRootResourceId:
    Type: String

  IntegrationRequestTemplate:
    Type: String
    Default: |
     {
      "body":$input.json('$'),
      "headers":{
        #foreach($param in $input.params().header.keySet())
        "$param": "$util.escapeJavaScript($input.params().header.get($param))"
        #if($foreach.hasNext),#end
        #end
      },
      "method": "$context.httpMethod",
      "params":{
        #foreach($param in $input.params().path.keySet())
        "$param": "$util.escapeJavaScript($input.params().path.get($param))"
        #if($foreach.hasNext),#end
        #end
      },
      "query":{
        #foreach($param in $input.params().querystring.keySet())
        "$param": "$util.escapeJavaScript($input.params().querystring.get($param))"
        #if($foreach.hasNext),#end
        #end
      }
     }

  IntegrationResponsesTemplate:
    Type: String
    Default: |
      #set ($errorObj = $util.parseJson($input.path('$.errorMessage')))
      {
        "errors" : {
          "type" : "$errorObj.type",
          "message" : "$errorObj.message",
          "request_id" : "$errorObj.requestId"
        }
      }

  SuccessResponseTemplate:
    Type: String
    Default: |
      {
        "statusCode": 200
      }

Resources:

  # Donations Lambda Resources

  GetDonationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub |-
          {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/GetDonation.zip
      Description: "Get a donation by uuid"
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub |-
        ${StackName}-GetDonation
      Handler: "index.handle"
      MemorySize: 128
      Role: !Ref LambdaRoleArn
      Runtime: "nodejs6.10"
      Timeout: 30

  GetDonationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt GetDonationLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/donations/{donation_uuid}
    DependsOn: GetDonationLambdaFunction

  GetDonationsLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub |-
          {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/GetDonations.zip
      Description: "Get a list of donations"
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub |-
        ${StackName}-GetDonations
      Handler: "index.handle"
      MemorySize: 128
      Role: !Ref LambdaRoleArn
      Runtime: "nodejs6.10"
      Timeout: 30

  GetDonationsLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt GetDonationsLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/donations
    DependsOn: GetDonationsLambdaFunction

  PostDonationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub |-
          {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/PostDonation.zip
      Description: "Create a new donation"
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub |-
        ${StackName}-PostDonation
      Handler: "index.handle"
      MemorySize: 128
      Role: !Ref LambdaRoleArn
      Runtime: "nodejs6.10"
      Timeout: 30

  PostDonationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PostDonationLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/donations
    DependsOn: PostDonationLambdaFunction

  PatchDonationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub |-
          {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/PatchDonation.zip
      Description: "Update an existing donation"
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub |-
        ${StackName}-PatchDonation
      Handler: "index.handle"
      MemorySize: 128
      Role: !Ref LambdaRoleArn
      Runtime: "nodejs6.10"
      Timeout: 30

  PatchDonationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PatchDonationLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/PATCH/donations/{donation_uuid}
    DependsOn: PatchDonationLambdaFunction

  DeleteDonationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub |-
          {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/DeleteDonation.zip
      Description: "Delete an existing donation"
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub |-
        ${StackName}-DeleteDonation
      Handler: "index.handle"
      MemorySize: 128
      Role: !Ref LambdaRoleArn
      Runtime: "nodejs6.10"
      Timeout: 30

  DeleteDonationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DeleteDonationLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/DELETE/donations/{donation_uuid}
    DependsOn: DeleteDonationLambdaFunction

  # Donations Api Gateway Resources

  DonationsApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref RestApiRootResourceId
      PathPart: "donations"

  DonationApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref DonationsApiResource
      PathPart: "{donation_uuid}"

  GetDonationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationApiResource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt GetDonationLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: GetDonationLambdaFunction

  GetDonationsApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationsApiResource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt GetDonationsLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: GetDonationsLambdaFunction

  PostDonationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationsApiResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt PostDonationLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 201
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 201
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: PostDonationLambdaFunction

  PatchDonationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationApiResource
      HttpMethod: PATCH
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt PatchDonationLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: PatchDonationLambdaFunction

  DeleteDonationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationApiResource
      HttpMethod: DELETE
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt DeleteDonationLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 204
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 204
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: DeleteDonationLambdaFunction

  OptionsDonationsApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationsApiResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: !Ref SuccessResponseTemplate
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Requested-With,X-Requested-By,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  OptionsDonationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref DonationApiResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: !Ref SuccessResponseTemplate
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Requested-With,X-Requested-By,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'PATCH,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true