---
AWSTemplateFormatVersion: 2010-09-09
Description: Recaptcha API resources for Givesource(R)
Parameters:

  StackName:
    Type: String

  LambdaSecurityGroupId:
    Type: String

  LambdaDefaultRuntime:
    Type: String

  DefaultLambdaFunctionTimeout:
    Type: Number

  IntegrationRequestTemplate:
    Type: String

  IntegrationResponsesTemplate:
    Type: String

  SuccessResponseTemplate:
    Type: String

  RestApi:
    Type: String

  RestApiRootResourceId:
    Type: String

  AuthorizeUsers:
    Type: String

  SecureSettingsLambdaFunctionRoleArn:
    Type: String

  DeadLetterQueueTopic:
    Type: String

Resources:
  # Secure Recaptcha Api Lambda Resources

  PostRecaptchaValidationLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub {{awsLambdaReleaseBucketPrefix}}-${AWS::Region}
        S3Key: fn/{{version}}/ValidateRecaptcha.zip
      DeadLetterConfig:
        TargetArn: !Ref DeadLetterQueueTopic
      Description: "Post validation for recaptcha and get secret key."
      Environment:
        Variables:
          AWS_STACK_NAME: !Ref StackName
      FunctionName: !Sub ${StackName}-ValidateRecaptcha
      Handler: "index.handle"
      MemorySize: 512
      Role: !Ref SecureSettingsLambdaFunctionRoleArn
      Runtime: !Ref LambdaDefaultRuntime
      Timeout: !Ref DefaultLambdaFunctionTimeout
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupId
        SubnetIds:
          - !ImportValue givesource-primary-private-subnet
          - !ImportValue givesource-secondary-private-subnet

  PostRecaptchaValidationLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PostRecaptchaValidationLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/recaptcha/validate
    DependsOn: PostRecaptchaValidationLambdaFunction

  # Recaptcha Api Gateway Resources

  RecaptchaApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref RestApiRootResourceId
      PathPart: "recaptcha"

  RecaptchaValidateApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref RecaptchaApiResource
      PathPart: "validate"

  PostRecaptchaValidationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref RecaptchaValidateApiResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: !Ref IntegrationRequestTemplate
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function}/invocations
          - Function: !GetAtt PostRecaptchaValidationLambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: 201
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
          - StatusCode: 400
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":400.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 401
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":401.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 403
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":403.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 404
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":404.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
          - StatusCode: 500
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: .*"httpStatus":500.*
            ResponseTemplates:
              application/json: !Ref IntegrationResponsesTemplate
      MethodResponses:
        - StatusCode: 201
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 400
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 401
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 403
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 404
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: 500
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
    DependsOn: PostRecaptchaValidationLambdaFunction

  OptionsRecaptchaValidationApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref RecaptchaValidateApiResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: !Ref SuccessResponseTemplate
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Requested-With,X-Requested-By,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
